****************************************CALL BY VALUE **************************************************************
#include<stdio.h>
void callbyvalue(int n)
{
    n=n+100;
    printf("\nResult : %d",n);
    
}
int main()
{
   int n=100;
    printf("\nValue of n : %d",n);
    callbyvalue(n);
    return 0;
}

**********************************************CALL BY REFEREFNCE*****************************************************
#include<stdio.h>
void callbyref(int *n)
{
    (*n)+=100;
    printf("\nResult : %d",*n);
    
}
int main()
{
   int n=100;
    printf("\nValue of n : %d",n);
    callbyref(&n);
    return 0;
}

*******************************************GLOBAL,LOCAL,CONST,MACRO DEFINITION,TERNARY OPERATOR******************************

#include<stdio.h>
#define abc 23
int a=10;
int main()
{
    int b=5;
    const int c=6;
    int m;
    printf("\nResult of m = %d", m=(b>5) ? 1 : 3);
    printf("\nValue of c = %d  d=%d ",c,abc);
    return 0;
}


******************************************FUNCTION CALL PROGRAM WITH STRING **************************************************
#include<stdio.h>
#include<string.h>
char* abc();
char* bbc();
void main()

{
    printf("\nMain executed");
    printf("\nString passed from abc : %s",abc());

}
char* abc()
{
    char c[10];
    printf("\nAbc executed ");
    printf("\nString passed from bbc : %s",bbc());
    return "karthi";
}
char* bbc()
{
    printf("\nbbc executed");
   return "hello"; 
}

